# ConfigMap for API URLs and Redis/Database Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: template-config
data:
  AUTH_SERVICE_URL: "https://services.district12.xyz/auth"
  VITE_AUTH_API_URL: "https://services.district12.xyz/auth"
  VITE_TICKET_API_URL: "https://services.district12.xyz/ticket"
  VITE_PRICE_API_URL: "https://services.district12.xyz/price"
  VITE_TRAIN_API_URL: "https://services.district12.xyz/train"
  VITE_CACHE_API_URL: "https://services.district12.xyz/cache"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  POSTGRES_PASSWORD: QVZOU19XdW5kSDhpM2hIdFZJblRLZFhr
---
# auth-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-auth-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: tick12-auth-service
          image: ishrakadit07/tick12_auth_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# auth-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-auth-service
spec:
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
---
# ticket-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-ticket-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ticket
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ticket
    spec:
      containers:
        - name: tick12-ticket-service
          image: ishrakadit07/tick12_ticket_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# ticket-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-ticket-service
spec:
  selector:
    app: ticket
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
  type: ClusterIP
---
# price-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-price-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: price
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: price
    spec:
      containers:
        - name: tick12-price-service
          image: ishrakadit07/tick12_price_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# price-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-price-service
spec:
  selector:
    app: price
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8002
  type: ClusterIP
---
# train-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-train-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: train
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: train
    spec:
      containers:
        - name: tick12-train-service
          image: ishrakadit07/tick12_train_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8003
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# train-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-train-service
spec:
  selector:
    app: train
  ports:
    - protocol: TCP
      port: 8003
      targetPort: 8003
  type: ClusterIP
---
# trainjs-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-trainjs-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trainjs
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: trainjs
    spec:
      containers:
        - name: tick12-trainjs-service
          image: ishrakadit07/tick12_train_service_js
          imagePullPolicy: Always
          ports:
            - containerPort: 8004
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# trainjs-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-trainjs-service
spec:
  selector:
    app: trainjs
  ports:
    - protocol: TCP
      port: 8004
      targetPort: 8004
  type: ClusterIP
---
# cache-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-cache-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: cache
    spec:
      containers:
        - name: tick12-cache-service
          image: ishrakadit07/tick12_cache_service
          imagePullPolicy: Always
          ports:
            - containerPort: 8005
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# cache-service Service
apiVersion: v1
kind: Service
metadata:
  name: tick12-cache-service
spec:
  selector:
    app: cache
  ports:
    - protocol: TCP
      port: 8005
      targetPort: 8005
  type: ClusterIP
---
# clint-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tick12-web-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: tick12-web-service
          image: ishrakadit07/tick12_web_service
          imagePullPolicy: Always
          ports:
            - containerPort: 5173
          envFrom:
            - configMapRef:
                name: template-config
            - secretRef:
                name: postgres-secret
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
# Horizontal Pod Autoscaler for auth-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tick12-auth-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-auth-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for ticket-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tick12-ticket-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-ticket-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for price-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tick12-price-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-price-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for train-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tick12-train-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-train-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for trainjs-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tick12-trainjs-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-trainjs-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for cache-service
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tick12-cache-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-cache-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
# Horizontal Pod Autoscaler for client
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tick12-web-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tick12-web-deploy
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
